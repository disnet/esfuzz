// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var AssignmentExpression, construct, Expression, Identifier, LHSExpression, OPERATORS, randomElement;
  Expression = require('../classes/Expression');
  LHSExpression = require('../classes/LHSExpression');
  Identifier = require('./Identifier');
  construct = require('../combinators').construct;
  randomElement = require('../random').randomElement;
  OPERATORS = [
    '=',
    '+=',
    '-=',
    '*=',
    '/=',
    '%=',
    '<<=',
    '>>=',
    '>>>=',
    '|=',
    '^=',
    '&='
  ];
  AssignmentExpression = function () {
    AssignmentExpression.prototype.type = AssignmentExpression.name;
    function AssignmentExpression(depth) {
      --depth;
      this.operator = randomElement(OPERATORS);
      if (depth > 0) {
        this.left = LHSExpression(depth);
        this.right = Expression(depth);
      } else {
        this.left = Identifier(0);
        this.right = Expression(0);
      }
    }
    return AssignmentExpression;
  }();
  module.exports = construct(AssignmentExpression);
}.call(this);
