// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var BlockStatement, cache$, construct, FunctionExpression, Identifier, listOf, maybe;
  BlockStatement = require('./BlockStatement');
  Identifier = require('./Identifier');
  cache$ = require('../combinators');
  construct = cache$.construct;
  listOf = cache$.listOf;
  maybe = cache$.maybe;
  FunctionExpression = function () {
    FunctionExpression.prototype.type = FunctionExpression.name;
    FunctionExpression.prototype.defaults = [];
    FunctionExpression.prototype.rest = null;
    FunctionExpression.prototype.generator = false;
    FunctionExpression.prototype.expression = false;
    function FunctionExpression(depth) {
      --depth;
      this.id = maybe(Identifier)(depth);
      this.params = listOf([Identifier])(depth);
      this.body = BlockStatement(depth);
    }
    return FunctionExpression;
  }();
  module.exports = construct(FunctionExpression);
}.call(this);
