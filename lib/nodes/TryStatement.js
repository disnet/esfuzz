// Generated by CoffeeScript 2.0.0-beta5
void function () {
  var BlockStatement, cache$, CatchClause, Identifier, maybe, oneOf, TryStatementMaybeCatch, TryStatementMaybeFinally, TYPE;
  BlockStatement = require('./BlockStatement');
  Identifier = require('./Identifier');
  cache$ = require('../combinators');
  oneOf = cache$.oneOf;
  maybe = cache$.maybe;
  TYPE = 'TryStatement';
  CatchClause = function (depth) {
    return {
      type: 'CatchClause',
      param: Identifier(depth),
      guard: null,
      body: BlockStatement(depth)
    };
  };
  TryStatementMaybeCatch = function (depth) {
    return {
      type: TYPE,
      block: BlockStatement(depth),
      handler: maybe(CatchClause)(depth),
      guardedHandlers: [],
      finalizer: BlockStatement(depth)
    };
  };
  TryStatementMaybeFinally = function (depth) {
    return {
      type: TYPE,
      block: BlockStatement(depth),
      handler: CatchClause(depth),
      guardedHandlers: [],
      finalizer: maybe(BlockStatement)(depth)
    };
  };
  module.exports = function (depth) {
    --depth;
    return oneOf([
      TryStatementMaybeCatch,
      TryStatementMaybeFinally
    ])(depth);
  };
}.call(this);
