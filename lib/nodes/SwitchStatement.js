// Generated by CoffeeScript 2.0.0-beta5
void function () {
  var cache$, Expression, leaf, listOf, listOfAtLeast, oneOf, Statement, SwitchCase, SwitchCaseDefault, TYPE;
  Statement = require('../classes/Statement');
  Expression = require('../classes/Expression');
  cache$ = require('../combinators');
  oneOf = cache$.oneOf;
  listOf = cache$.listOf;
  listOfAtLeast = cache$.listOfAtLeast;
  TYPE = 'SwitchStatement';
  leaf = function () {
    return {
      type: TYPE,
      discriminant: Expression(0),
      cases: [],
      lexical: false
    };
  };
  SwitchCase = function (depth) {
    return {
      type: 'SwitchCase',
      test: Expression(depth),
      consequent: listOfAtLeast(1, [Statement])(depth)
    };
  };
  SwitchCaseDefault = function (depth) {
    return {
      type: 'SwitchCase',
      test: null,
      consequent: listOfAtLeast(1, [Statement])(depth)
    };
  };
  module.exports = function (depth) {
    if (!(depth-- > 0))
      return leaf();
    return {
      type: TYPE,
      discriminant: Expression(depth),
      cases: listOf([SwitchCase])(depth).concat(oneOf([
        SwitchCaseDefault,
        function () {
          return [];
        }
      ])(depth)),
      lexical: false
    };
  };
}.call(this);
