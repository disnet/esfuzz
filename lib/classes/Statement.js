// Generated by CoffeeScript 2.0.0-beta5
void function () {
  var EmptyStatement, oneOf, statements;
  EmptyStatement = require('../nodes/EmptyStatement');
  oneOf = require('../combinators').oneOf;
  statements = [EmptyStatement];
  module.exports = function (depth, args) {
    var cache$;
    args = 2 <= arguments.length ? [].slice.call(arguments, 1) : [];
    if (!(depth > 0))
      return EmptyStatement.apply(null, [0].concat([].slice.call(args)));
    return (cache$ = oneOf(statements)).apply(cache$, [depth].concat([].slice.call(args)));
  };
  statements.push(require('../nodes/BlockStatement'));
  statements.push(require('../nodes/DebuggerStatement'));
  statements.push(require('../nodes/DoWhileStatement'));
  statements.push(require('../nodes/ExpressionStatement'));
  statements.push(require('../nodes/ForInStatement'));
  statements.push(require('../nodes/ForStatement'));
  statements.push(require('../nodes/FunctionDeclaration'));
  statements.push(require('../nodes/IfStatement'));
  statements.push(require('../nodes/SwitchStatement'));
  statements.push(require('../nodes/ThrowStatement'));
  statements.push(require('../nodes/TryStatement'));
  statements.push(require('../nodes/VariableDeclaration'));
  statements.push(require('../nodes/WhileStatement'));
  statements.push(require('../nodes/WithStatement'));
}.call(this);
